%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Do not edit the TeX file your work
% will be overwritten.  Edit the RnW
% file instead.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

<<setup, include=FALSE, cache=FALSE>>=
knitr_debug <- FALSE # Set to true to see error output
cache <- FALSE # Set to true to cache knitr output for this analysis.
r_script_dir <- "R_scripts/"
source(file.path(r_script_dir, "initialize.R"), echo=FALSE)
source(file.path(r_script_dir, "load_data.R"), echo=FALSE)
@


\newcommand{\BCLTDensitiesGraph}{
%<<mult_path, cache=cache, fig.show='hold', fig.cap=fig_cap>>=
<<bcltdensities, cache=cache, fig.show='hold'>>=

ggplot(dist_df) +
    geom_line(aes(x=theta_grid_center, y=dens, color=factor(num_obs), group=factor(num_obs))) +
    xlab(TeX("$\\gamma - E\\[\\gamma | X\\]$")) +
    ylab(TeX("$p(\\gamma | X)$")) +
    labs(color="Number of observations (N)")
@
}



\newcommand{\LowDimAccuracyGraph}{
%<<mult_path, cache=cache, fig.show='hold', fig.cap=fig_cap>>=
<<lowdim_accuracy, cache=cache, fig.show='hold'>>=

bclt_df <- df %>%
    filter(!as.logical(is_cond), num_obs == num_g)

num_obs <- 800
ggplot(bclt_df %>% filter(num_obs == !!num_obs)) +
    geom_point(aes(x=diff_refit, diff_pred)) +
    geom_abline(aes(slope=1, intercept=0)) +
    xlab(TeX("Actual difference in $E\\[\\gamma | X\\]$")) +
    ylab(TeX("Linear approximation")) +
    ggtitle(sprintf(paste0(
        "Negative Binomial model \n",
        "leaving out single datapoints with N = %d"
        ), num_obs))
@
}



\newcommand{\HighDimAccuracyGraph}{
%<<mult_path, cache=cache, fig.show='hold', fig.cap=fig_cap>>=
<<highdim_accuracy, cache=cache, fig.show='hold'>>=

nonbclt_df <- df %>%
    filter(as.logical(is_cond), num_obs == num_g)

num_obs <- 800
ggplot(nonbclt_df %>% filter(num_obs == !!num_obs)) +
    geom_point(aes(x=diff_refit, diff_pred)) +
    geom_abline(aes(slope=1, intercept=0)) +
    xlab(TeX("Actual difference in $E\\[\\gamma | X\\]$")) +
    ylab(TeX("Linear approximation")) +
    ggtitle(sprintf(paste0(
        "Poisson random effect model \n",
        "leaving out single datapoints with N = %d"
        ), num_obs))
@
}


\newcommand{\ManyPlotsOne}{
%<<mult_path, cache=cache, fig.show='hold', fig.cap=fig_cap>>=
<<manyplots, cache=cache, fig.show='hold'>>=


ggplot(df %>% filter(drop_group)) +
    geom_point(aes(x=num_g * diff_refit, y=num_g * diff_pred, color=is_cond)) +
    geom_abline(aes(slope=1, intercept=0)) +
    facet_grid(num_obs ~ num_obs / num_g)

@
}


\newcommand{\ManyPlotsTwo}{
%<<mult_path, cache=cache, fig.show='hold', fig.cap=fig_cap>>=
<<manyplotstwo, cache=cache, fig.show='hold'>>=
ggplot(df %>% filter(!drop_group)) +
    geom_point(aes(x=num_obs * diff_refit, y=num_obs * diff_pred, color=is_cond)) +
    geom_abline(aes(slope=1, intercept=0)) +
    facet_grid(num_obs ~ num_obs / num_g)

@
}
