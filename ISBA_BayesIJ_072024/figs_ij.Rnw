%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Do not edit the TeX file your work
% will be overwritten.  Edit the RnW
% file instead.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


<<setup, include=FALSE, cache=FALSE>>=
single_column <- FALSE # Not actually used
knitr_debug <- FALSE # Set to true to see error output
knitr_cache <- FALSE # Set to true to cache knitr output for this analysis.
r_script_dir <- "../bayes/R_scripts/"
source(file.path(r_script_dir, "initialize.R"), echo=FALSE)
source(file.path(r_script_dir, "election/load_data.R"))
source(file.path(r_script_dir, "ARM/load_data.R"))
source(file.path(r_script_dir, "election/define_macros.R"))
source(file.path(r_script_dir, "nuisance_example/load_data.R"))
source(file.path(r_script_dir, "nuisance_example/n_over_g_graph.R"))


# aspect ratio refers to height / width.
SetSlideImageSize <- function(width=0.98, aspect_ratio=4/5, r_width=5.0) {
  ow <- sprintf("%0.3f\\linewidth", width)
  oh <- sprintf("%0.3f\\linewidth", aspect_ratio * width)
  fw <- r_width
  fh <- r_width * aspect_ratio
  opts_chunk$set(out.width=ow,
                 out.height=oh,
                 fig.width=fw,
                 fig.height=fh)
}
@



\newcommand{\ElectionData}{
<<graph_fig_cap1>>=
figcap <- paste(
    "Some real data. ",
    "of the IJ and simulation, frequentist error.",
    sep="")
SetSlideImageSize(aspect_ratio=1.2, width=0.98)
@
<<election_data, cache=knitr_cache, fig.show='hold'>>=
source(file.path(r_script_dir, "election/data_graph.R"),
       echo=knitr_debug, print.eval=TRUE)
@
}


\newcommand{\ElectionResultsGlobal}{
<<graph_fig_cap2>>=
SetSlideImageSize(aspect_ratio=1.2, width=0.98)
@
<<election_result, cache=knitr_cache, fig.show='hold'>>=
source(file.path(r_script_dir, "election/result_national_graph.R"),
       echo=knitr_debug, print.eval=TRUE)
@
}


<<sim_ar_vars>>=
sim_ar <- 1.
sim_img_over_legend <- 2
sim_r_width <- 2.7
@

\newcommand{\PoissonFigTen}{
<<graph_fig_cap3>>=
SetSlideImageSize(aspect_ratio=sim_ar, width=0.98, r_width=sim_r_width)
plt <- Plotsim(10) + theme(legend.position="none")
@
<<PoissonFigTen, cache=knitr_cache, fig.show='hold'>>=
print(plt)
@
}


\newcommand{\PoissonFigOne}{
<<graph_fig_cap4>>=
SetSlideImageSize(aspect_ratio=sim_ar, width=0.98, r_width=sim_r_width)
plt <- Plotsim(1) + theme(legend.position="none")
@
<<PoissonFigOne, cache=knitr_cache, fig.show='hold'>>=
print(plt)
@
}


\newcommand{\PoissonFigLegend}{
<<graph_fig_cap5>>=
SetSlideImageSize(
    aspect_ratio=sim_ar * sim_img_over_legend,
    width=0.98,
    r_width=sim_r_width / sim_img_over_legend)
legend <- Plotsim(10) %>% get_legend() %>% as_ggplot()
@
<<PoissonFigLegend, cache=knitr_cache, fig.show='hold'>>=
print(legend)
@
}



\newcommand{\ARMRelFig}{
<<graph_fig_cap6>>=
figcap <- paste(
    "The distribution of the relative errors $\\normdiffij$ and",
    "$\\normdiffbayes$.",
    "Log scale parameters include all variances or covariances that involve ",
    "at least one log scale parameters.",
    sep="")
SetSlideImageSize(aspect_ratio=1.0, width=0.98)
@
<<normerr_graph, cache=knitr_cache, fig.show='hold'>>=
source(file.path(r_script_dir, "ARM/standardized_difference_graph_big_n.R"),
       echo=knitr_debug, print.eval=TRUE)
@
}


\newcommand{\ARMZFig}{
<<graph_fig_cap7>>=
figcap <- paste(
    "The distribution of the z-statistics $\\zdiff$.  ",
    "Red lines indicate the boundaries of a normal test for significance ",
    "with level $0.1$, and ``Rejected'' counts the number of covariances ",
    "in the rejection region.  ",
    "Log scale parameters include all variances or covariances that involve ",
    "at least one log scale parameters.",
    sep="")
SetSlideImageSize(aspect_ratio=1.2, width=0.98)
@
<<relerr_graph, cache=knitr_cache, fig.show='hold'>>=
source(file.path(r_script_dir, "ARM/z_score_graph.R"),
       echo=knitr_debug, print.eval=TRUE)
@
}
